(labels
    ((swap (a b)
	   (let* ((ba (window-buffer a))
		  (bb (window-buffer b))
		  (sa (window-start a))
		  (sb (window-start b)))
	     (set-window-buffer a bb)
	     (set-window-buffer b ba)
	     (set-window-start a sb)
	     (set-window-start b sa))))
  (defun swap-windows ()
    "If you have 2 windows, it swaps them." (interactive)
    (cond ((not (= (count-windows) 2)) (message "You need exactly 2 windows to do this."))
	  (t
	   (let* ((w1 (first (window-list)))
		  (w2 (second (window-list)))
		  (b1 (window-buffer w1)))
	     (swap w1 w2)))))
  (defun rotate-windows ()
    "Generalized version of swap-windows."
    (interactive)
    (cond ((< (count-windows) 2) (message "You need multiple windows in order to rotate them"))
	  ((= (count-windows) 2) (swap-windows))
	  (t (let* ((ws (window-list))
		    (m (car ws))
		    (r (cdr ws)))
	       (mapc (lambda (w) (swap m w)) r))))))

(defun rename-file-and-buffer (new-name)
  "Renames both current buffer and file it's visiting to NEW-NAME." (interactive "sNew name: ")
  (let ((name (buffer-name))
	(filename (buffer-file-name)))
    (if (not filename)
	(message "Buffer '%s' is not visiting a file!" name)
      (if (get-buffer new-name)
	  (message "A buffer named '%s' already exists!" new-name)
	(progn 
	  (rename-file name new-name 1)
	  (rename-buffer new-name)
	  (set-visited-file-name new-name)
	  (set-buffer-modified-p nil))))))

(defun move-buffer-file (dir)
  "Moves both current buffer and file it's visiting to DIR." (interactive "DNew directory: ")
  (let* ((name (buffer-name))
	 (filename (buffer-file-name))
	 (dir
	  (if (string-match dir "\\(?:/\\|\\\\)$")
	      (substring dir 0 -1) dir))
	 (newname (concat dir "/" name)))
    (if (not filename)
	(message "Buffer '%s' is not visiting a file!" name)
      (progn
	(copy-file filename newname 1)
	(delete-file filename)
	(set-visited-file-name newname)
 	(set-buffer-modified-p nil)
 	t))))

(defun word-count nil "Count words in buffer" (interactive)
  (shell-command-on-region (point-min) (point-max) "wc"))

(global-set-key (kbd "C-x 4 r") 'rotate-windows)